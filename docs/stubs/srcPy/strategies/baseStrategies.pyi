import backtrader as bt
from _typeshed import Incomplete
from srcPy.utils.logger import get_logger as get_logger
from srcPy.utils.validators import validate_dataframe as validate_dataframe

class BaseStrategy(bt.Strategy):
    params: Incomplete
    order: Incomplete
    logger: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self) -> None: ...
    def next(self) -> None: ...
    def calculate_stop_price(self, is_long): ...
    def calculate_tp_price(self, is_long): ...
    def notify_order(self, order) -> None: ...

class LogisticRegressionStrategy(BaseStrategy):
    params: Incomplete
    model: Incomplete
    scaler: Incomplete
    df: Incomplete
    features: Incomplete
    targets: Incomplete
    def __init__(self) -> None: ...
    def prenext(self) -> None: ...
    def next(self) -> None: ...
    def collect_data(self) -> None: ...
    def get_current_features(self): ...
    def get_signal(self): ...

class RandomForestStrategy(BaseStrategy):
    params: Incomplete
    model: Incomplete
    scaler: Incomplete
    df: Incomplete
    features: Incomplete
    targets: Incomplete
    def __init__(self) -> None: ...
    def prenext(self) -> None: ...
    def next(self) -> None: ...
    def collect_data(self) -> None: ...
    def get_current_features(self): ...
    def get_signal(self): ...

class ARIMAStrategy(BaseStrategy):
    params: Incomplete
    history: Incomplete
    model: Incomplete
    def __init__(self) -> None: ...
    def prenext(self) -> None: ...
    def next(self) -> None: ...
    def get_signal(self): ...

class GARCHStrategy(BaseStrategy):
    params: Incomplete
    returns: Incomplete
    model: Incomplete
    def __init__(self) -> None: ...
    def prenext(self) -> None: ...
    def next(self) -> None: ...
    def get_signal(self): ...

class MovingAverageCrossover(BaseStrategy):
    params: Incomplete
    sma_short: Incomplete
    sma_long: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self): ...

class RSIStrategy(BaseStrategy):
    params: Incomplete
    rsi: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self): ...

class MACDStrategy(BaseStrategy):
    params: Incomplete
    macd: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self): ...

class BollingerBandsStrategy(BaseStrategy):
    params: Incomplete
    bbands: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self): ...

class MomentumStrategy(BaseStrategy):
    params: Incomplete
    roc: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self): ...

class MeanReversionStrategy(BaseStrategy):
    params: Incomplete
    sma: Incomplete
    stddev: Incomplete
    def __init__(self) -> None: ...
    def get_signal(self): ...
